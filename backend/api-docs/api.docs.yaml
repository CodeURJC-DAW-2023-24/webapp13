---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  "/api/users/registerUser":
    post:
      tags:
      - user-rest-controller
      summary: Register User
      operationId: registerUser
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: username
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: repeatPassword
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: User created successfully
          content:
            "*/*":
              schema:
                type: object
        '404':
          description: User registration failed
          content:
            "*/*":
              schema:
                type: object
  "/api/reviews/new":
    post:
      tags:
      - review-rest-controller
      operationId: postReview
      parameters:
      - name: rating
        in: query
        required: true
        schema:
          type: number
          format: float
      - name: sellerID
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/api/reports/new":
    post:
      tags:
      - report-rest-controller
      summary: Add new report
      operationId: addNewReport
      parameters:
      - name: userReported
        in: query
        required: true
        schema:
          type: string
      - name: description
        in: query
        required: true
        schema:
          type: string
      - name: category
        in: query
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Report created successfully
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Report_Detailed"
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Report_Detailed"
  "/api/products/{id}/image":
    get:
      tags:
      - products-rest-controller
      summary: Get a Image Product by its id
      operationId: getImage1
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Found the Image Product
          content:
            application/json: {}
        '204':
          description: Image not found
        '404':
          description: Product not found
    post:
      tags:
      - products-rest-controller
      summary: Create a Image Product by its id
      operationId: uploadImage1
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  description: Image 1 Product
                  format: binary
      responses:
        '201':
          description: Create the Image Product
          content:
            application/json: {}
        '204':
          description: Image not found
        '404':
          description: Product not found
  "/api/products/":
    get:
      tags:
      - products-rest-controller
      summary: Get New Eight Products
      operationId: getAllProducts_1
      responses:
        '200':
          description: Found the Products
          content:
            application/json: {}
    post:
      tags:
      - products-rest-controller
      summary: Create a Product
      operationId: registerProduct
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Product_Detailed"
      responses:
        '201':
          description: Succesful Product creation
          content:
            application/json: {}
        '406':
          description: Not Acceptable Post title exists
  "/api/users/{userID}":
    delete:
      tags:
      - user-rest-controller
      summary: Delete User by ID
      operationId: deleteUser
      parameters:
      - name: userID
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: User deleted successfully
          content:
            "*/*":
              schema:
                type: object
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                type: object
    patch:
      tags:
      - user-rest-controller
      summary: Update User by ID
      operationId: updateUser
      parameters:
      - name: userID
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fullName
        in: query
        required: false
        schema:
          type: string
      - name: username
        in: query
        required: false
        schema:
          type: string
      - name: currentPassword
        in: query
        required: false
        schema:
          type: string
      - name: newPassword
        in: query
        required: false
        schema:
          type: string
      - name: confirmPassword
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        '200':
          description: User updated successfully
          content:
            "*/*":
              schema:
                type: object
        '400':
          description: Bad request
          content:
            "*/*":
              schema:
                type: object
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                type: object
  "/api/reviews/{id}":
    get:
      tags:
      - review-rest-controller
      operationId: getReviewByID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Review_Detailed"
    delete:
      tags:
      - review-rest-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    patch:
      tags:
      - review-rest-controller
      operationId: updateReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: rating
        in: query
        required: false
        schema:
          type: number
          format: float
      - name: sellerID
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/users/{userID}/reviews":
    get:
      tags:
      - user-rest-controller
      summary: Get All reviews by User ID
      operationId: getUserReviews
      parameters:
      - name: userID
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Found the Products
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Review_Detailed"
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Review_Detailed"
  "/api/users/{userID}/image":
    get:
      tags:
      - user-rest-controller
      summary: Download User Image by ID
      operationId: downloadUserImage
      parameters:
      - name: userID
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Found the User Image
          content:
            "*/*":
              schema:
                type: object
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                type: object
  "/api/users/{id}":
    get:
      tags:
      - user-rest-controller
      summary: Get User by ID
      operationId: getUserByID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Found the User
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/User_Detailed"
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/User_Detailed"
  "/api/users/{id}/allProducts":
    get:
      tags:
      - user-rest-controller
      summary: Get All Products by User ID
      operationId: getProducts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Found the Products
          content:
            "*/*":
              schema:
                type: object
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                type: object
  "/api/users/profile/{id}":
    get:
      tags:
      - user-rest-controller
      summary: Get User Profile by ID
      operationId: userProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Found the User Profile
          content:
            "*/*":
              schema:
                type: object
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                type: object
  "/api/reviews/seller/{id}":
    get:
      tags:
      - review-rest-controller
      operationId: getReviewsBySellerID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Review_Detailed"
  "/api/reviews/":
    get:
      tags:
      - review-rest-controller
      operationId: getAllProducts
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Review_Detailed"
  "/api/reports/{userID}":
    get:
      tags:
      - report-rest-controller
      summary: Get new reports for a user
      operationId: newReports
      parameters:
      - name: userID
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: New reports retrieved successfully
          content:
            "*/*":
              schema:
                type: object
        '404':
          description: User not found
          content:
            "*/*":
              schema:
                type: object
  "/api/reports/manage/{id}":
    get:
      tags:
      - report-rest-controller
      summary: Manage report by ID
      operationId: manageReport
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Report details retrieved successfully
          content:
            "*/*":
              schema:
                type: object
        '404':
          description: Report not found
          content:
            "*/*":
              schema:
                type: object
  "/api/reports/":
    get:
      tags:
      - report-rest-controller
      summary: Get all reports
      operationId: getReports
      responses:
        '200':
          description: Reports retrieved successfully
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Report_Detailed"
  "/api/products/{id}":
    get:
      tags:
      - products-rest-controller
      summary: Get Product by its id
      operationId: getProduct
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Product Found
          content:
            application/json: {}
        '404':
          description: Product not found
    delete:
      tags:
      - products-rest-controller
      summary: Delete a Product
      operationId: deleteProduct_1
      parameters:
      - name: id
        in: path
        description: id of Product to be searched
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '201':
          description: Successful Product delete
          content:
            application/json: {}
        '404':
          description: Product not found
  "/api/products/toys":
    get:
      tags:
      - products-rest-controller
      summary: Get All toy products
      operationId: getToys
      responses:
        '200':
          description: Found the Products
          content:
            application/json: {}
  "/api/products/sports":
    get:
      tags:
      - products-rest-controller
      summary: Get All sport products
      operationId: getSports
      responses:
        '200':
          description: Found the Products
          content:
            application/json: {}
  "/api/products/homegarden":
    get:
      tags:
      - products-rest-controller
      summary: Get All home and garden products
      operationId: getHomeGarden
      responses:
        '200':
          description: Found the Products
          content:
            application/json: {}
  "/api/products/furniture":
    get:
      tags:
      - products-rest-controller
      summary: Get All furniture products
      operationId: getFurniture
      responses:
        '200':
          description: Found the Products
          content:
            application/json: {}
  "/api/products/electronics":
    get:
      tags:
      - products-rest-controller
      summary: Get All electronic products
      operationId: getElectronics
      responses:
        '200':
          description: Found the Products
          content:
            application/json: {}
  "/api/products/clothes":
    get:
      tags:
      - products-rest-controller
      summary: Get All clothing products
      operationId: getClothes
      responses:
        '200':
          description: Found the Products
          content:
            application/json: {}
  "/api/products/books":
    get:
      tags:
      - products-rest-controller
      summary: Get All book products
      operationId: getBooks
      responses:
        '200':
          description: Found the Products
          content:
            application/json: {}
components:
  schemas:
    Report_Detailed:
      type: object
    Product_Detailed:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        address:
          type: string
        price:
          type: number
          format: double
        description:
          type: string
        imageFile:
          type: object
          properties:
            binaryStream:
              type: object
        image:
          type: boolean
        owner:
          type: integer
          format: int64
        productType:
          type: integer
          format: int64
      description: Object Type Product
    Review_Detailed:
      type: object
      properties:
        reviewID:
          type: integer
          format: int64
        rating:
          type: number
          format: float
        sellerID:
          type: integer
          format: int64
    User_Detailed:
      type: object
      properties:
        userID:
          type: integer
          format: int64
        encodedPassword:
          type: string
        fullName:
          type: string
        username:
          type: string
        userEmail:
          type: string
        income:
          type: number
          format: double
        expense:
          type: number
          format: double
        userImg:
          type: object
          properties:
            binaryStream:
              type: object
        roles:
          type: array
          items:
            type: string
        reviewList:
          type: array
          items:
            type: integer
            format: int32
        name:
          type: string
        imageFile:
          type: object
          properties:
            binaryStream:
              type: object
